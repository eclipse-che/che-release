name: Update base images
on:
  workflow_dispatch:
    inputs:
      params:
        description: 'Additional parameters to updateBaseImages.sh'
        default: ''
        required: false
      branch:
        description: 'Project branch'
        default: 'main'
        required: true
  schedule:
  - cron: "0 0 * * 6"

jobs:
  build:
    name: Check if base images in Dockerfiles can be updated to newer tags
    runs-on: ubuntu-20.04
    strategy: 
      matrix: 
        projects:
          - { repo: "eclipse/che", user: "CHE_BOT_GITHUB_TOKEN", command: ""  }
          - { repo: "eclipse-che/che-server", user: "CHE_BOT_GITHUB_TOKEN", command: "" }
          - { repo: "eclipse-che/che-machine-exec", user: "CHE_BOT_GITHUB_TOKEN", command: "" }
          - { repo: "eclipse-che/che-devfile-registry", user: "CHE_BOT_GITHUB_TOKEN", command: "" }
          - { repo: "eclipse-che/che-plugin-registry", user: "CHE_BOT_GITHUB_TOKEN", command: "" }
          - { repo: "eclipse-che/che-theia", user: "CHE_BOT_GITHUB_TOKEN", command: "" }
          - { repo: "eclipse-che/che-dashboard", user: "CHE_BOT_GITHUB_TOKEN", command: "" }
          - { repo: "che-incubator/chectl", user: "CHE_INCUBATOR_BOT_GITHUB_TOKEN", command: "" }
          - { repo: "che-incubator/kubernetes-image-puller", user: "CHE_BOT_GITHUB_TOKEN", command: "" }
          - { repo: "che-incubator/kubernetes-image-puller", user: "CHE_BOT_GITHUB_TOKEN", command: "" }
          
    steps:
      - name: "Checkout source code"
        uses: actions/checkout@v2
        with:
          repository: ${{ matrix.projects.repo }}
          token: ${{ secrets.[matrix.projects.user] }}
          fetch-depth: 0
      # - name: Login to registry.redhat.io 
      #   uses: docker/login-action@v1
      #   with:
      #     registry: registry.redhat.io
      #     username: ${{ secrets.CRW_BUILD_USER }}
      #     password: ${{ secrets.CRW_BUILD_TOKEN }}
      - name: Install skopeo + yq
        run: |
          checkVersion() {
            if [[  "$1" = "$(echo -e "$1\n$2" | sort -V | head -n1)" ]]; then
              # echo "[INFO] $3 version $2 >= $1, can proceed."
              true
            else
              echo "[INFO] Installing $3 version >= $1 ..."
              if [[ "$3" == "yq" ]]; then
                pip install "$3"
              else
                sudo apt-get -y install "$3"
              fi
            fi
          }
          checkVersion 1.1 "$(skopeo --version | sed -e "s/skopeo version //")" skopeo
          checkVersion 2.0 "$(yq --version | sed -e "s/yq //")" yq
      - name: Init
        run: |
          pushd /tmp >/dev/null || exit 1
          curl -sSLO https://raw.githubusercontent.com/redhat-developer/codeready-workspaces/crw-2-rhel-8/product/updateBaseImages.sh
          chmod +x updateBaseImages.sh
          popd >/dev/null || exit 1
          git config --global user.name "Mykhailo Kuznietsov"
          git config --global user.email "mkuznets@redhat.com"
          echo running job for ${{ matrix.projects.repo }} 
